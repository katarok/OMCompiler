# Adrian Pop, adrpo@ida.liu.se, 2006-02-01
# Makefile for compilation of OMC using OMDev-mingw
# OMDev-mingw: http://www.ida.liu.se/~adrpo/omc/omdev/

top_builddir = $(OMBUILDDIR)/../
builddir_build=$(OMBUILDDIR)
builddir_bin=$(OMBUILDDIR)/bin
builddir_lib=$(OMBUILDDIR)/lib/omc
builddir_inc=$(OMBUILDDIR)/include/omc

#use this call to use precompiled headers
#BUILDTYPE = Release
#use this call if you want to debug the cpp runtime
ifeq ($(BUILDTYPE),)
BUILDTYPE=Debug
endif

CMAKE = $(OMDEV)/bin/cmake/bin/cmake -DCMAKE_VERBOSE_MAKEFILE:Bool=ON

runtimeCpp:
	mkdir -p Build
	cd ./Build; echo "change to Build";	\
	$(CMAKE) -G "MSYS Makefiles" -D CMAKE_BUILD_TYPE=$(BUILDTYPE) -D CMAKE_INSTALL_PREFIX:PATH="$(OMBUILDDIR)" MAKE_CXX_COMPILER=g++ ../; \
	make;

runtimeCPPmsvc:
	test -f """${VS100COMNTOOLS}/../../VC/vcvarsall.bat"""
	echo 'Build the cppRuntime with MSVC'
	#rm -rf Build_MSVC
	mkdir -p Build_MSVC
	echo call '"%VS100COMNTOOLS%\\..\\..\\VC\\vcvarsall.bat"' > Build_MSVC/build.bat
	#echo '%OMDEV%\\bin\\cmake\\bin\\cmake -DCMAKE_VERBOSE_MAKEFILE:Bool=ON -DCMAKE_BUILD_TYPE=$(BUILDTYPE) -DCMAKE_INSTALL_PREFIX=./tmp ../ -G "Visual Studio 10"' >> Build_MSVC/build.bat
ifeq ($(BUILDTYPE),Debug)
	echo echo Running CMake from '%OMDEV%\\bin\\cmake\\bin\\cmake' >> Build_MSVC/build.bat
	echo '%OMDEV%\\bin\\cmake\\bin\\cmake -DCMAKE_VERBOSE_MAKEFILE:Bool=ON -DCMAKE_BUILD_TYPE=$(BUILDTYPE) -DCMAKE_INSTALL_PREFIX=./tmp ../ -G "NMake Makefiles JOM" -D"CMAKE_MAKE_PROGRAM:PATH=%OMDEV%\\tools\\jom\\jom.exe"' >> Build_MSVC/build.bat
else
	echo '%OMDEV%\\bin\\cmake\\bin\\cmake -DCMAKE_VERBOSE_MAKEFILE:Bool=ON -DCMAKE_BUILD_TYPE=$(BUILDTYPE) -DCMAKE_INSTALL_PREFIX=./tmp ../ -G "NMake Makefiles JOM" -D"CMAKE_MAKE_PROGRAM:PATH=%OMDEV%\\tools\\jom\\jom.exe"' >> Build_MSVC/build.bat
endif
	# for some reason, the environment variable 'MAKEFLAGS' was set to 'w' on my and Niklas' machine?!
	echo set MAKEFLAGS="" >> Build_MSVC/build.bat
	echo echo Running NMake JOM >> Build_MSVC/build.bat
	echo %OMDEV%\\tools\\jom\\jom.exe /f Makefile install >> Build_MSVC/build.bat
	cd ./Build_MSVC; echo "change to Build_MSVC";\
	cmd /c build.bat

	# move msvc libs into subfolder
	mkdir -p Build_MSVC/tmp/lib/omc/cpp/msvc
	mv Build_MSVC/tmp/lib/omc/cpp/*.dll Build_MSVC/tmp/lib/omc/cpp/msvc
	mv Build_MSVC/tmp/lib/omc/cpp/*.lib Build_MSVC/tmp/lib/omc/cpp/msvc


	# copy pdb files
ifneq ($(BUILDTYPE),Release)
	cp -u Build_MSVC/Solver/Newton/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Solver/Euler/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Core/SimController/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Core/Modelica/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	#cp -u Build_MSVC/Core/ModelicaExternalC/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Core/SimulationSettings/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Core/Solver/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Core/System/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	#cp -u Build_MSVC/SimCoreFactory/OMCFactory/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	cp -u Build_MSVC/Core/DataExchange/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
	#cp -u Build_MSVC/Core/Math/*.pdb Build_MSVC/tmp/lib/omc/cpp/msvc
endif


	# move folder to build dir
	cp -R Build_MSVC/tmp/* $(builddir_build)


install: runtimeCpp
	(cd Build; make install)
	(cd Build; cp -p $(OMDEV)/lib/3rdParty/boost-1_55/lib/*.dll $(builddir_bin)/.)


clean:
	rm -R -f Build
